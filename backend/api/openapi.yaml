openapi: 3.0.1
info:
  description: This is the REST API Documentation for ICBC Flex Work, by Team Flex
  title: Flex Work
  version: 0.0.6
servers:
- url: http://34.224.250.122:8080/
tags:
- description: As an ICBC employee, make a **Booking** on an office in any ICBC location
  name: Office Booking
- description: As an ICBC office owner, create **Availabilities** for fellow employees
  name: Office Lending
- description: Operations for Facility Administrator (TODO)
  name: Admin
paths:
  /features:
    get:
      operationId: getFeatures
      parameters:
      - example: 12
        explode: true
        in: query
        name: availabilityId
        required: false
        schema:
          type: number
        style: form
      - example: NV4-01D
        explode: true
        in: query
        name: workspaceId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - Conference Phone
                - Private
                items:
                  type: string
                type: array
          description: Successful Operation
      summary: Get features by availabilityId, workspaceId, or all features if no
        params
      tags:
      - Office Booking
      - Office Lending
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
  /locations:
    get:
      operationId: getLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                example:
                - North Vancouver, BC
                - Vancouver, BC
                items:
                  type: string
                type: array
          description: Successful Operation
      summary: A list of all the location names
      tags:
      - Office Booking
      - Office Lending
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
  /availabilities/top/{amount}:
    get:
      operationId: getTopAvailabilities
      parameters:
      - example: 50
        explode: false
        in: path
        name: amount
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Availability'
                type: array
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Finds top availabilities, not filtered
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
  /availabilities:
    get:
      operationId: getAvailabilities
      parameters:
      - description: The first date of the search range
        example: 2020-02-14
        explode: true
        in: query
        name: startDate
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: The last date of the search range
        example: 2020-02-16
        explode: true
        in: query
        name: endDate
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: Office building location
        example: North Vancouver
        explode: true
        in: query
        name: location
        required: false
        schema:
          type: string
        style: form
      - description: Floor of building
        example: NV4
        explode: true
        in: query
        name: floor
        required: false
        schema:
          type: string
        style: form
      - description: Features to filter by
        example:
        - TV
        - Private
        explode: true
        in: query
        name: features
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Availability'
                type: array
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Finds Availabilities, filtered by various properties, of which startDate
        and endDate are required
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
    post:
      operationId: createAvailability
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Availability'
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request (Incorrect Request Body)
        "403":
          content: {}
          description: Forbidden (Conflicting Dates)
      summary: Create an Availability (mark a workspace as available)
      tags:
      - Office Lending
      x-openapi-router-controller: OfficeLendingController
      x-openapi-router-service: OfficeLendingService
  /availabilities/owner:
    get:
      description: The Availabilities of the Workspace(s) associated with the Staff
        ID will be found.
      operationId: getAvailabilitiesByOwnerID
      parameters:
      - description: the Staff ID of the office owner
        example: 8
        explode: true
        in: query
        name: id
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Availability'
                type: array
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Finds Availabilities by the Staff ID of the owner
      tags:
      - Office Lending
      x-openapi-router-controller: OfficeLendingController
      x-openapi-router-service: OfficeLendingService
  /availabilities/{id}:
    delete:
      operationId: cancelAvailability
      parameters:
      - description: ID of the Availability to delete
        example: 23
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Cancel an Availability
      tags:
      - Office Lending
      x-openapi-router-controller: OfficeLendingController
      x-openapi-router-service: OfficeLendingService
  /lockWorkspace:
    post:
      operationId: lockBooking
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body_1'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingSummary'
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Locking of booking unsuccessful
      summary: Temporarily lock a Booking as the User enters confirmation page
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
  /lockWorkspace/{id}:
    delete:
      description: For when the User navigates away from the confirmation page or
        closes the browser tab.
      operationId: unlockBooking
      parameters:
      - description: ID of the Booking to delete
        example: 15
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Unlocks a Booking before the 20 minute automatic unlock
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
  /bookings:
    get:
      operationId: getBookingsByUserID
      parameters:
      - description: The ID of the User
        example: 1234
        explode: true
        in: query
        name: staffId
        required: true
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Booking'
                type: array
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Finds Bookings by User ID
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
    post:
      operationId: createBooking
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingSummary'
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Confirm a temporarily locked Booking
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
  /bookings/{id}:
    delete:
      operationId: cancelBooking
      parameters:
      - description: ID of the Booking to delete
        example: 23
        explode: true
        in: path
        name: id
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content: {}
          description: Successful Operation
        "400":
          content: {}
          description: Bad Request
      summary: Cancel an upcoming Booking
      tags:
      - Office Booking
      x-openapi-router-controller: OfficeBookingController
      x-openapi-router-service: OfficeBookingService
components:
  schemas:
    Workspace:
      example:
        features:
        - TV
        - TV
        staff:
          valid: true
          firstName: Kobe
          lastName: Bryant
          department: Customer Service
          staffId: 8
          email: employee@icbc.com
        floor:
          floorId: 24
          floorPlanUri: nv4.png
          city: North Vancouver
          location: North Vancouver
          floorName: NV4
          building: ICBC North Vancouver Building 1
        workspaceId: NV4-24B
      properties:
        workspaceId:
          example: NV4-24B
          type: string
        staff:
          $ref: '#/components/schemas/User'
        floor:
          $ref: '#/components/schemas/Floor'
        features:
          items:
            example: TV
            type: string
          type: array
      type: object
    Availability:
      example:
        floorId: 2
        endDate: 2000-01-23
        availabilityId: 2
        workspaceName: NV4-24B
        location: North Vancouver
        bookings:
        - endDate: 2000-01-23
          user:
            valid: true
            firstName: Kobe
            lastName: Bryant
            department: Customer Service
            staffId: 8
            email: employee@icbc.com
          bookingId: 8
          startDate: 2000-01-23
        - endDate: 2000-01-23
          user:
            valid: true
            firstName: Kobe
            lastName: Bryant
            department: Customer Service
            staffId: 8
            email: employee@icbc.com
          bookingId: 8
          startDate: 2000-01-23
        startDate: 2000-01-23
        workspaceId: NV4-24B
      properties:
        availabilityId:
          example: 2
          type: integer
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        workspaceId:
          example: NV4-24B
          type: string
        workspaceName:
          example: NV4-24B
          type: string
        floorId:
          example: 2
          type: integer
        location:
          example: North Vancouver
          type: string
        bookings:
          items:
            $ref: '#/components/schemas/BookingSummary'
          type: array
      type: object
    BookingSummary:
      example:
        endDate: 2000-01-23
        user:
          valid: true
          firstName: Kobe
          lastName: Bryant
          department: Customer Service
          staffId: 8
          email: employee@icbc.com
        bookingId: 8
        startDate: 2000-01-23
      properties:
        bookingId:
          example: 8
          type: integer
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        user:
          $ref: '#/components/schemas/User'
      type: object
    Booking:
      example:
        workspace:
          features:
          - TV
          - TV
          staff:
            valid: true
            firstName: Kobe
            lastName: Bryant
            department: Customer Service
            staffId: 8
            email: employee@icbc.com
          floor:
            floorId: 24
            floorPlanUri: nv4.png
            city: North Vancouver
            location: North Vancouver
            floorName: NV4
            building: ICBC North Vancouver Building 1
          workspaceId: NV4-24B
        endDate: 2000-01-23
        availabilityId: 2
        user:
          valid: true
          firstName: Kobe
          lastName: Bryant
          department: Customer Service
          staffId: 8
          email: employee@icbc.com
        bookingId: 8
        startDate: 2000-01-23
      properties:
        bookingId:
          example: 8
          type: integer
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        user:
          $ref: '#/components/schemas/User'
        availabilityId:
          example: 2
          type: integer
        workspace:
          $ref: '#/components/schemas/Workspace'
      type: object
    Floor:
      example:
        floorId: 24
        floorPlanUri: nv4.png
        city: North Vancouver
        location: North Vancouver
        floorName: NV4
        building: ICBC North Vancouver Building 1
      properties:
        floorId:
          example: 24
          type: integer
        floorName:
          example: NV4
          type: string
        location:
          example: North Vancouver
          type: string
        city:
          example: North Vancouver
          type: string
        building:
          example: ICBC North Vancouver Building 1
          type: string
        floorPlanUri:
          example: nv4.png
          type: string
      type: object
    User:
      example:
        valid: true
        firstName: Kobe
        lastName: Bryant
        department: Customer Service
        staffId: 8
        email: employee@icbc.com
      properties:
        staffId:
          example: 8
          type: integer
        email:
          example: employee@icbc.com
          type: string
        firstName:
          example: Kobe
          type: string
        lastName:
          example: Bryant
          type: string
        department:
          example: Customer Service
          type: string
        valid:
          type: boolean
      type: object
    body:
      properties:
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
        workspaceId:
          type: string
      required:
      - endDate
      - startDate
      - workspaceId
      type: object
    body_1:
      properties:
        availabilityId:
          type: integer
        staffId:
          type: integer
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
      required:
      - availabilityId
      - endDate
      - staffId
      - startDate
      type: object
    body_2:
      properties:
        bookingId:
          type: integer
      required:
      - bookingId
      type: object
