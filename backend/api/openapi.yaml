openapi: 3.0.1
info:
  title: ICBC Flex Work
  description: ICBC Flex Work REST Back End
  version: 0.0.13
servers:
  - url: https://icbcflexwork.me:8080/
tags:
  - name: OfficeBooking
    description: As an ICBC employee, make a **Booking** on an office in any ICBC location
  - name: OfficeLending
    description: As an ICBC office owner, create **Availabilities** for fellow employees
  - name: Admin
    description: As an ICBC facility admin, manage locations and floor plans
paths:
  /admin/upload-floor-data:
    post:
      tags:
        - Admin
      summary: Upload a CSV of a floor's workspaces
      description:
        Upload a CSV containing information about each workspace on a floor
        (owner and features)
      operationId: adminUploadFloorData
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/body_3"
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Something went wrong
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
              example: "Error: CSV was missing column: OfficeID"
      x-swagger-router-controller: Admin
  /admin/upload-floorplan-image:
    post:
      tags:
        - Admin
      summary: Upload a JPG floor plan for a specific floor
      operationId: adminUploadFloorplanImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/body_4"
        required: true
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Something went wrong
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
              example: "Error: Floor with ID 9000 does not exist"
      x-swagger-router-controller: Admin
  /features:
    get:
      tags:
        - OfficeBooking
        - OfficeLending
      summary:
        Get features by availabilityId, workspaceId, or all features if no
        params
      operationId: getFeatures
      parameters:
        - name: availabilityId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: number
          example: 12
        - name: workspaceId
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: NV4-01D
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                example:
                  - Conference Phone
                  - Private
                items:
                  type: string
                x-content-type: application/json
      x-swagger-router-controller: OfficeBooking
  /locations:
    get:
      tags:
        - OfficeBooking
        - OfficeLending
      summary: A list of all the location names
      operationId: getLocations
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                example:
                  - North Vancouver, BC
                  - Vancouver, BC
                items:
                  type: string
                x-content-type: application/json
      x-swagger-router-controller: OfficeBooking
  /packages:
    get:
      tags:
        - OfficeBooking
      summary: Finds Availabilities or Booking Suggestion Packages
      description:
        Finds Availabilities, filtered by start and end dates, optional
        location (desired floor IDs), and optional required features. will use multiple
        eligible offices to suggest a booking package if a single desk is not available
        for the duration.
      operationId: getPackages
      parameters:
        - name: startDate
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date
        - name: floorIds
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: number
        - name: features
          in: query
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: number
      responses:
        "200":
          description: Successful Operation
        "400":
          description: Bad Request
      x-swagger-router-controller: OfficeBooking
  /availabilities/top/{amount}:
    get:
      tags:
        - OfficeBooking
      summary: Finds top availabilities, not filtered
      operationId: getTopAvailabilities
      parameters:
        - name: amount
          in: path
          required: true
          style: simple
          explode: false
          schema:
            type: number
          example: 50
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Availability"
                x-content-type: application/json
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeBooking
  /availabilities:
    get:
      tags:
        - OfficeBooking
      summary:
        Finds Availabilities, filtered by various properties, of which startDate
        and endDate are required
      operationId: getAvailabilities
      parameters:
        - name: startDate
          in: query
          description: The first date of the search range
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date
          example: 2020-02-14
        - name: endDate
          in: query
          description: The last date of the search range
          required: true
          style: form
          explode: true
          schema:
            type: string
            format: date
          example: 2020-02-16
        - name: location
          in: query
          description: Office building location
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: North Vancouver
        - name: floor
          in: query
          description: Floor of building
          required: false
          style: form
          explode: true
          schema:
            type: string
          example: NV4
        - name: features
          in: query
          description: Features to filter by
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
          example:
            - TV
            - Private
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Availability"
                x-content-type: application/json
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeBooking
    post:
      tags:
        - OfficeLending
      summary: Create an Availability (mark a workspace as available)
      operationId: createAvailability
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/body"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Availability"
        "400":
          description: Bad Request (Incorrect Request Body)
          content: {}
        "403":
          description: Forbidden (Conflicting Dates)
          content: {}
      x-swagger-router-controller: OfficeLending
  /availabilities/owner:
    get:
      tags:
        - OfficeLending
      summary: Finds Availabilities by the Staff ID of the owner
      description:
        The Availabilities of the Workspace(s) associated with the Staff
        ID will be found.
      operationId: getAvailabilitiesByOwnerID
      parameters:
        - name: id
          in: query
          description: the Staff ID of the office owner
          required: true
          style: form
          explode: true
          schema:
            type: integer
          example: 8
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Availability"
                x-content-type: application/json
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeLending
  /availabilities/{id}:
    delete:
      tags:
        - OfficeLending
      summary: Cancel an Availability
      operationId: cancelAvailability
      parameters:
        - name: id
          in: path
          description: ID of the Availability to delete
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          example: 23
      responses:
        "200":
          description: Successful Operation
          content: {}
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeLending
  /lockWorkspace:
    post:
      tags:
        - OfficeBooking
      summary: Temporarily lock a Booking as the User enters confirmation page
      operationId: lockBooking
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/body_1"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingSummary"
        "400":
          description: Bad Request
          content: {}
        "403":
          description: Locking of booking unsuccessful
          content: {}
      x-swagger-router-controller: OfficeBooking
  /lockWorkspace/{id}:
    delete:
      tags:
        - OfficeBooking
      summary: Unlocks a Booking before the 20 minute automatic unlock
      description:
        For when the User navigates away from the confirmation page or
        closes the browser tab.
      operationId: unlockBooking
      parameters:
        - name: id
          in: path
          description: ID of the Booking to delete
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          example: 15
      responses:
        "200":
          description: Successful Operation
          content: {}
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeBooking
  /bookings:
    get:
      tags:
        - OfficeBooking
      summary: Finds Bookings by User ID
      operationId: getBookingsByUserID
      parameters:
        - name: staffId
          in: query
          description: The ID of the User
          required: true
          style: form
          explode: true
          schema:
            type: integer
          example: 1234
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Booking"
                x-content-type: application/json
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeBooking
    post:
      tags:
        - OfficeBooking
      summary: Confirm a temporarily locked Booking
      operationId: createBooking
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/body_2"
        required: true
      responses:
        "200":
          description: Successful Operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BookingSummary"
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeBooking
  /bookings/{id}:
    delete:
      tags:
        - OfficeBooking
      summary: Cancel an upcoming Booking
      operationId: cancelBooking
      parameters:
        - name: id
          in: path
          description: ID of the Booking to delete
          required: true
          style: simple
          explode: true
          schema:
            type: integer
          example: 23
      responses:
        "200":
          description: Successful Operation
          content: {}
        "400":
          description: Bad Request
          content: {}
      x-swagger-router-controller: OfficeBooking
components:
  schemas:
    Workspace:
      type: object
      properties:
        workspaceId:
          type: string
          example: NV4-24B
        staff:
          $ref: "#/components/schemas/User"
        floor:
          $ref: "#/components/schemas/Floor"
        features:
          type: array
          items:
            type: string
            example: TV
      example:
        features:
          - TV
          - TV
        floor:
          floorId: 24
          floorPlanUri: nv4.png
          city: North Vancouver
          location: North Vancouver
          floorName: NV4
          building: ICBC North Vancouver Building 1
        workspaceId: NV4-24B
    Availability:
      type: object
      properties:
        availabilityId:
          type: integer
          example: 2
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        workspaceId:
          type: string
          example: NV4-24B
        workspaceName:
          type: string
          example: NV4-24B
        floorId:
          type: integer
          example: 2
        location:
          type: string
          example: North Vancouver
        bookings:
          type: array
          items:
            $ref: "#/components/schemas/BookingSummary"
      example:
        floorId: 2
        endDate: 2000-01-23
        availabilityId: 2
        workspaceName: NV4-24B
        location: North Vancouver
        bookings:
          - endDate: 2000-01-23
            user:
              valid: true
              firstName: Kobe
              lastName: Bryant
              department: Customer Service
              staffId: 8
              email: employee@icbc.com
            bookingId: 8
            startDate: 2000-01-23
          - endDate: 2000-01-23
            user:
              valid: true
              firstName: Kobe
              lastName: Bryant
              department: Customer Service
              staffId: 8
              email: employee@icbc.com
            bookingId: 8
            startDate: 2000-01-23
        startDate: 2000-01-23
        workspaceId: NV4-24B
    BookingSummary:
      type: object
      properties:
        bookingId:
          type: integer
          example: 8
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        user:
          $ref: "#/components/schemas/User"
      example:
        endDate: 2000-01-23
        user:
          valid: true
          firstName: Kobe
          lastName: Bryant
          department: Customer Service
          staffId: 8
          email: employee@icbc.com
        bookingId: 8
        startDate: 2000-01-23
    Booking:
      type: object
      properties:
        bookingId:
          type: integer
          example: 8
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        user:
          $ref: "#/components/schemas/User"
        availabilityId:
          type: integer
          example: 2
        workspace:
          $ref: "#/components/schemas/Workspace"
      example:
        workspace:
          features:
            - TV
            - TV
          floor:
            floorId: 24
            floorPlanUri: nv4.png
            city: North Vancouver
            location: North Vancouver
            floorName: NV4
            building: ICBC North Vancouver Building 1
          workspaceId: NV4-24B
        endDate: 2000-01-23
        availabilityId: 2
        user:
          valid: true
          firstName: Kobe
          lastName: Bryant
          department: Customer Service
          staffId: 8
          email: employee@icbc.com
        bookingId: 8
        startDate: 2000-01-23
    Floor:
      type: object
      properties:
        floorId:
          type: integer
          example: 24
        floorName:
          type: string
          example: NV4
        location:
          type: string
          example: North Vancouver
        city:
          type: string
          example: North Vancouver
        building:
          type: string
          example: ICBC North Vancouver Building 1
        floorPlanUri:
          type: string
          example: nv4.png
      example:
        floorId: 24
        floorPlanUri: nv4.png
        city: North Vancouver
        location: North Vancouver
        floorName: NV4
        building: ICBC North Vancouver Building 1
    User:
      type: object
      properties:
        staffId:
          type: integer
          example: 8
        email:
          type: string
          example: employee@icbc.com
        firstName:
          type: string
          example: Kobe
        lastName:
          type: string
          example: Bryant
        department:
          type: string
          example: Customer Service
        valid:
          type: boolean
      example:
        valid: true
        firstName: Kobe
        lastName: Bryant
        department: Customer Service
        staffId: 8
        email: employee@icbc.com
    body:
      required:
        - endDate
        - startDate
        - workspaceId
      type: object
      properties:
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        workspaceId:
          type: string
        comment:
          type: string
    body_1:
      required:
        - availabilityId
        - endDate
        - staffId
        - startDate
      type: object
      properties:
        availabilityId:
          type: integer
        staffId:
          type: integer
        startDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
    body_2:
      required:
        - bookingId
      type: object
      properties:
        bookingId:
          type: integer
    body_3:
      type: object
      properties:
        floorId:
          type: integer
        floorData:
          type: string
          format: binary
    body_4:
      type: object
      properties:
        floorId:
          type: integer
        floorplanImage:
          type: string
          format: binary
